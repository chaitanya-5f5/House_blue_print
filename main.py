
"""project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uCgu215884Mrgh2bdX4GOmKF6-kxG3Kh
"""

import tkinter as tk
from tkinter import *

def start_game():

    app.destroy()
app=Tk()
app.title("house")
label1=tk.Label(app,text="BLUE PRINT",fg="black",font=("arial",25))
label1.pack()
background_image=PhotoImage(file="C:\\Users\\rebba\\Downloads\\house2.png")
canvas=tk.Canvas(app,width=5000,height=6000)
app.geometry("1600x900")
canvas.pack()
canvas.create_image(10,10,image=background_image,anchor=NW)




but=Button(app,text="ENTER",command=start_game,font="arial 25")
but.pack(side=TOP,padx=4,pady=7,anchor=W)
but.place(x=500,y=650)



def create_blueprint():
    house_length = float(house_length_entry.get())
    house_width = float(house_width_entry.get())

    kitchen_length = float(kitchen_length_entry.get())
    kitchen_width = float(kitchen_width_entry.get())

    bedroom1_length = float(bedroom1_length_entry.get())
    bedroom1_width = float(bedroom1_width_entry.get())

    bedroom2_length = float(bedroom2_length_entry.get())
    bedroom2_width = float(bedroom2_width_entry.get())

    hall_length = float(hall_length_entry.get())
    hall_width = float(hall_width_entry.get())

    bathroom_length = float(bathroom_length_entry.get())
    bathroom_width = float(bathroom_width_entry.get())

    blueprint_window = tk.Toplevel(root)
    blueprint_window.title("House Blueprint")


    canvas = tk.Canvas(blueprint_window, width=1600, height=800)
    canvas.pack()


    walking_space = 10

    scale_x = (house_width - walking_space * 3) / (kitchen_width + bedroom1_width + bedroom2_width)
    scale_y = (house_length - hall_length - walking_space) / (max(bedroom1_length, bedroom2_length))

    # Draw the house outline
    canvas.create_rectangle(50, 50, house_width + 50, house_length + 50, outline="brown", width=20)

    # Draw the rooms
    x_offset = 50 + walking_space
    y_offset = 50 + walking_space

    # Meeting Hall (light blue)
    canvas.create_rectangle(x_offset, y_offset, x_offset + kitchen_width * scale_x, y_offset + hall_length * scale_y,
                            fill="lightblue")
    canvas.create_text(x_offset + (kitchen_width * scale_x) / 2, y_offset + (hall_length * scale_y) / 2,
                       text="Meeting Hall ({}m x {}m)".format(kitchen_width, hall_length), font=("Arial", 10))

    # Bedroom 1 (light green)
    x_offset += (kitchen_width + walking_space) * scale_x
    canvas.create_rectangle(x_offset, y_offset, x_offset + bedroom1_width * scale_x,
                            y_offset + bedroom1_length * scale_y, fill="lightgreen")
    canvas.create_text(x_offset + (bedroom1_width * scale_x) / 2, y_offset + (bedroom1_length * scale_y) / 2,
                       text="Bedroom 1 ({}m x {}m)".format(bedroom1_width, bedroom1_length), font=("Arial", 10))

    # Bedroom 2 (light green)
    x_offset += (bedroom1_width + walking_space) * scale_x
    canvas.create_rectangle(x_offset, y_offset, x_offset + bedroom2_width * scale_x,
                                y_offset + bedroom2_length * scale_y, fill="lightgreen")
    canvas.create_text(x_offset + (bedroom2_width * scale_x) / 2, y_offset + (bedroom2_length * scale_y) / 2,
                           text="Bedroom 2 ({}m x {}m)".format(bedroom2_width, bedroom2_length), font=("Arial", 10))

        # Kitchen (light yellow)
    x_offset = 50 + walking_space
    y_offset += (hall_length + walking_space) * scale_y
    canvas.create_rectangle(x_offset, y_offset, x_offset + kitchen_width * scale_x,
                                y_offset + kitchen_length * scale_y, fill="lightyellow")
    canvas.create_text(x_offset + (kitchen_width * scale_x) / 2, y_offset + (kitchen_length * scale_y) / 2,
                           text="Kitchen ({}m x {}m)".format(kitchen_width, kitchen_length), font=("Arial", 10))

        # Bathroom (light grey)
    x_offset += (kitchen_width + walking_space) * scale_x
    canvas.create_rectangle(x_offset, y_offset, x_offset + bathroom_width * scale_x,
                                y_offset + bathroom_length * scale_y, fill="lightgrey")
    canvas.create_text(x_offset + (bathroom_width * scale_x) / 2, y_offset + (bathroom_length * scale_y) / 2,
                       text="Bathroom ({}m x {}m)".format(bathroom_width, bathroom_length), font=("Arial", 8))


    exit_button=tk.Button(blueprint_window,text="EXIT",font=("arial",35),command=root.destroy)
    exit_button.place(x=1200,y=600)

# Create the main window
root = tk.Tk()
root.title("House Blueprint Creator")
root.geometry('1600x800')
root.configure(bg="lightblue")

# Create labels and entry widgets for each room dimension
tk.Label(root, text="Kitchen Length(10-150):",font=("Comic Sans MS",20),bg="lightblue").grid(row=0, column=0)
kitchen_length_entry = tk.Entry(root)
kitchen_length_entry.grid(row=0, column=1)

tk.Label(root, text="Kitchen Width (0-350):",font=("Comic Sans MS",20),bg="lightblue").grid(row=1, column=0)
kitchen_width_entry = tk.Entry(root)
kitchen_width_entry.grid(row=1, column=1)

tk.Label(root, text="Bedroom 1 Length (20-300):",font=("Comic Sans MS",20),bg="lightblue").grid(row=2, column=0)
bedroom1_length_entry = tk.Entry(root)
bedroom1_length_entry.grid(row=2, column=1)

tk.Label(root, text="Bedroom 1 Width(20-350):",font=("Comic Sans MS",20),bg="lightblue").grid(row=3, column=0)
bedroom1_width_entry = tk.Entry(root)
bedroom1_width_entry.grid(row=3, column=1)

tk.Label(root, text="Bedroom 2 Length(200-500):",font=("Comic Sans MS",20),bg="lightblue").grid(row=4, column=0)
bedroom2_length_entry = tk.Entry(root)
bedroom2_length_entry.grid(row=4, column=1)

tk.Label(root, text="Bedroom 2 Width(200-650):",font=("Comic Sans MS",20),bg="lightblue").grid(row=5, column=0)
bedroom2_width_entry = tk.Entry(root)
bedroom2_width_entry.grid(row=5, column=1)

tk.Label(root, text="Hall Length(150-450):",font=("Comic Sans MS",20),bg="lightblue").grid(row=6, column=0)
hall_length_entry = tk.Entry(root)
hall_length_entry.grid(row=6, column=1)

tk.Label(root, text="Hall Width(0-350):",font=("Comic Sans MS",20),bg="lightblue").grid(row=7, column=0)
hall_width_entry = tk.Entry(root)
hall_width_entry.grid(row=7, column=1)

tk.Label(root, text="Bathroom Length(90):",font=("Comic Sans MS",20),bg="lightblue").grid(row=8, column=0)
bathroom_length_entry = tk.Entry(root)
bathroom_length_entry.grid(row=8, column=1)

tk.Label(root, text="Bathroom Width(90):",font=("Comic Sans MS",20),bg="lightblue").grid(row=9, column=0)
bathroom_width_entry = tk.Entry(root)
bathroom_width_entry.grid(row=9, column=1)

# Entry for available area
tk.Label(root, text="house_length(500-600):",font=("Comic Sans MS",20),bg="lightblue").grid(row=10, column=0)
house_length_entry = tk.Entry(root)
house_length_entry.grid(row=10, column=1)

tk.Label(root, text="house_width(400-700):",font=("Comic Sans MS",20),bg="lightblue").grid(row=11, column=0)
house_width_entry = tk.Entry(root)
house_width_entry.grid(row=11, column=1)

# Create a button to generate the blueprint
create_button = tk.Button(root, text="CREATE BLUEPRINT", command=create_blueprint)
create_button.grid(row=13, column=0, columnspan=2)

# Label to display the total area of the house or the error message
result_label = tk.Label(root, text="", fg="red")
result_label.grid(row=12, column=0, columnspan=2)





# Start the Tkinter main loop
root.mainloop(
